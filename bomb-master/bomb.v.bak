module bomb(reset, clock, button, keypadC, keypadR, dotC1, dotC2, dotR, hex1, hex2, hex3, hex4, hex5, hex6)

input clock, reset;
input [3:0]button;
input [3:0]keypadC;
input [3:0]keypadR;

output [7:0]dotC1;
output [7:0]dotC2;
output [7:0]dotR;
output [6:0]hex1;
output [6:0]hex2;
output [6:0]hex3;
output [6:0]hex4;
output [6:0]hex5;
output [6:0]hex6;

reg [7:0]dotC1;
reg [7:0]dotC2;
reg [7:0]dotR;
reg [6:0]hex1;
reg [6:0]hex2;
reg [6:0]hex3;
reg [6:0]hex4;
reg [6:0]hex5;
reg [6:0]hex6;
reg [31:0]cnt;
reg [3:0]tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;

always @(negedge reset or posedge clock)
	begin
		if( !reset )
		begin
			cnt <=32'd0;
			div_clk <= 1'b0;
		end
		else
		begin
			if( cnt == 32'd25000000 )
			begin
				cnt <= 32'd0;
				div_clk <= ~div_clk;
			end
			else
			begin
				cnt <= cnt + 32'd1;
			end
		end
	end
	always @(negedge reset or posedge div_clk)
	begin
		tmp1 = tmp1+1;
		if(tmp1 == 10)
		begin
			tmp1 = 0;
			tmp2 = tmp2+1;
		end
		if(tmp2 == 6)
		begin
			tmp2 = 0;
			tmp3 = tmp3+1;
		end
		if(tmp3 == 10)
		begin
			tmp3 = 0;
			tmp4 = tmp4+1;
		end
		if(tmp4 == 6)
		begin
			tmp4 = 0;
			tmp5 = tmp5+1;
		end
		if(tmp5 == 10)
		begin
			tmp5 = 0;
			tmp6 = tmp6+1;
		end
	end
endmodule 